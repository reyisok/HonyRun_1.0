# ========================================
# HonyRun WebFlux响应式系统测试环境配置
#
# 重要提醒：测试环境配置文件必须且只能位于 src/test/resources/ 目录下！
# 禁止在 src/main/resources/ 目录下创建测试配置文件！
#
# 统一配置规范：
# 1. 测试环境配置文件正确路径：src/test/resources/application-test.properties
# 2. 测试用户配置文件正确路径：src/test/resources/test-users.properties
# 3. 禁止在 src/main/resources/ 目录下创建任何测试相关配置文件
# 4. 所有测试配置必须统一管理，避免分散配置
#
# @author: Mr.Rey Copyright © 2025
# @created: 2025-07-01 18:30:00
# @modified: 2025-10-27 12:26:43
# @version: 4.0.0 - 统一配置规范整合版本
# ========================================

# ========================================
# 应用基础配置
# ========================================
spring.application.name=honyrun-reactive-test
server.port=0
app.environment=test

# 应用基础环境变量配置（整合自src/main/resources/application-test.properties）
honyrun.app.name=${HONYRUN_APP_NAME:honyrun-reactive}
honyrun.app.version=${HONYRUN_APP_VERSION:2.0.0}
honyrun.app.environment=${HONYRUN_APP_ENVIRONMENT:test}
honyrun.build.version=${HONYRUN_BUILD_VERSION:20250127001}
honyrun.build.time=${HONYRUN_BUILD_TIME:2025-10-27T12:26:43Z}

# Bean覆盖配置约束 - 保持默认禁用覆盖，避免同名覆盖不确定性
spring.main.allow-bean-definition-overriding=false

# ========================================
# 测试超时配置 - 防止测试长时间运行
# ========================================
# 全局测试超时配置（秒）
test.timeout.default=30
test.timeout.integration=60
test.timeout.performance=120
test.timeout.unit=10

# Spring Boot测试超时配置
spring.test.context.cache.maxSize=32
spring.test.context.failure-threshold=1

# ========================================
# R2DBC MySQL数据库配置 - 测试环境
# 注意：本项目已禁用H2数据库，统一使用MySQL和Redis
# 整合自src/main/resources/application-test.properties的数据库配置
# ========================================
# MySQL测试数据库连接配置
spring.r2dbc.url=r2dbc:mysql://localhost:8906/honyrundb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
spring.r2dbc.username=honyrunMysql
spring.r2dbc.password=honyrun@sys

# 数据库配置（整合自application-env-template.properties和application-unified-config.properties）
honyrun.database.host=${HONYRUN_DB_HOST:localhost}
honyrun.database.port=${HONYRUN_DB_PORT:8906}
honyrun.database.name=${HONYRUN_DB_NAME:honyrundb}
honyrun.database.username=${HONYRUN_DB_USERNAME:honyrunMysql}
honyrun.database.password=${HONYRUN_DB_PASSWORD:honyrun@sys}
honyrun.database.driver=${HONYRUN_DB_DRIVER:mysql}
honyrun.database.timezone=${HONYRUN_DB_TIMEZONE:Asia/Shanghai}

# 数据库连接池配置（整合自application-unified-config.properties）
honyrun.database.pool.initial-size=${HONYRUN_DB_POOL_INITIAL_SIZE:5}
honyrun.database.pool.max-size=${HONYRUN_DB_POOL_MAX_SIZE:20}
honyrun.database.pool.min-idle=${HONYRUN_DB_POOL_MIN_IDLE:2}
honyrun.database.pool.max-idle-time=${HONYRUN_DB_POOL_MAX_IDLE_TIME:1800}
honyrun.database.pool.validation-query=${HONYRUN_DB_POOL_VALIDATION_QUERY:SELECT 1}

# 表名配置（整合自application-unified-config.properties）
honyrun.database.table.users=${HONYRUN_DB_TABLE_USERS:users}
honyrun.database.table.system-log=${HONYRUN_DB_TABLE_SYSTEM_LOG:system_log}
honyrun.database.table.transaction-log=${HONYRUN_DB_TABLE_TRANSACTION_LOG:transaction_log}

# 字段名配置（整合自application-unified-config.properties）
honyrun.database.field.user-type=${HONYRUN_DB_FIELD_USER_TYPE:user_type}
honyrun.database.field.user-id=${HONYRUN_DB_FIELD_USER_ID:user_id}
honyrun.database.field.username=${HONYRUN_DB_FIELD_USERNAME:username}
honyrun.database.field.email=${HONYRUN_DB_FIELD_EMAIL:email}
honyrun.database.field.phone=${HONYRUN_DB_FIELD_PHONE:phone}
honyrun.database.field.status=${HONYRUN_DB_FIELD_STATUS:status}
honyrun.database.field.created-at=${HONYRUN_DB_FIELD_CREATED_AT:created_at}
honyrun.database.field.updated-at=${HONYRUN_DB_FIELD_UPDATED_AT:updated_at}

# MySQL数据库初始化配置 - 统一使用主代码的schema脚本
# 数据库初始化配置 - 由测试R2DBC初始化器统一管理，禁用原生初始化避免重复
spring.sql.init.mode=never
spring.sql.init.continue-on-error=true
honyrun.test.db.init.enabled=true

# R2DBC连接池配置 - 测试环境优化（统一配置，避免重复）
spring.r2dbc.pool.enabled=true
spring.r2dbc.pool.initial-size=5
spring.r2dbc.pool.max-size=15
spring.r2dbc.pool.max-idle-time=PT10M
spring.r2dbc.pool.max-acquire-time=PT30S
spring.r2dbc.pool.max-create-connection-time=PT30S
spring.r2dbc.pool.max-life-time=PT30M
spring.r2dbc.pool.validation-query=SELECT 1
spring.r2dbc.pool.validation-depth=LOCAL
spring.r2dbc.pool.background-eviction-interval=PT30S
spring.r2dbc.pool.acquire-retry=3

# ========================================
# Redis配置 - 测试环境
# 整合自src/main/resources/application-test.properties的Redis配置
# ========================================
# 禁用Testcontainers，使用本地Redis实例
testcontainers.redis.enabled=false
# Redis服务器地址 - 使用IP地址避免主机名解析问题
spring.data.redis.host=127.0.0.1
# Redis服务器端口，项目使用8902
spring.data.redis.port=8902
# Redis数据库索引（测试环境使用DB1避免冲突）
spring.data.redis.database=1
# Redis连接超时时间 - 测试环境设置为5秒，与健康检查器保持一致
spring.data.redis.timeout=5000
# Redis密码 - 与开发环境保持一致，默认 honyrun@sys（如需覆盖请通过环境变量 REDIS_PASSWORD）
spring.data.redis.password=${REDIS_PASSWORD:honyrun@sys}

# Redis配置（整合自application-unified-config.properties）
spring.data.redis.host=${HONYRUN_REDIS_HOST:localhost}
spring.data.redis.port=${HONYRUN_REDIS_PORT:8902}
spring.data.redis.database=${HONYRUN_REDIS_DATABASE:0}
spring.data.redis.password=${HONYRUN_REDIS_PASSWORD:honyrun@sys}
spring.data.redis.timeout=${HONYRUN_REDIS_TIMEOUT:10000}
spring.data.redis.connect-timeout=${HONYRUN_REDIS_CONNECT_TIMEOUT:10000}

# Lettuce连接池配置
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=5000

# Redis连接池配置（测试环境，整合自src/main/resources/application-test.properties）
spring.data.redis.lettuce.pool.max-active=${HONYRUN_REDIS_POOL_MAX_ACTIVE:10}
spring.data.redis.lettuce.pool.max-idle=${HONYRUN_REDIS_POOL_MAX_IDLE:5}
spring.data.redis.lettuce.pool.min-idle=${HONYRUN_REDIS_POOL_MIN_IDLE:2}
spring.data.redis.lettuce.pool.max-wait=${HONYRUN_REDIS_POOL_MAX_WAIT:5000}

# ========================================
# Redis Repository配置 - 禁用自动扫描
# ========================================
# 禁用Spring Data Redis Repository自动配置和扫描
spring.data.redis.repositories.enabled=false

# ========================================
# JWT测试环境配置
# 整合自application-jwt.properties的JWT和安全配置
# ========================================
# 注意：此配置整合自application-jwt.properties文件，统一使用honyrun.jwt.*前缀
# 按照项目规范要求，删除独立JWT配置文件，整合到各环境配置文件中
# 所有JWT相关配置必须使用honyrun.jwt.*前缀，符合JwtProperties类的@ConfigurationProperties规范
# ========================================

# JWT核心配置 - 测试环境
honyrun.jwt.secret=${HONYRUN_JWT_SECRET:honyrun-jwt-secure-key-for-development-environment-2025-extended-to-meet-minimum-length-requirement-64-chars}
honyrun.jwt.issuer=${HONYRUN_JWT_ISSUER:honyrun-dev}
honyrun.jwt.audience=${HONYRUN_JWT_AUDIENCE:honyrun-users}
honyrun.jwt.subject=${HONYRUN_JWT_SUBJECT:honyrun-auth}

# JWT过期时间配置（毫秒）- 测试环境
honyrun.jwt.expiration=${HONYRUN_JWT_EXPIRATION:300000}
honyrun.jwt.refresh-expiration=${HONYRUN_JWT_REFRESH_EXPIRATION:3600000}
honyrun.jwt.refresh-threshold=${HONYRUN_JWT_REFRESH_THRESHOLD:60000}

# JWT功能开关 - 测试环境
honyrun.jwt.auto-refresh-enabled=${HONYRUN_JWT_AUTO_REFRESH_ENABLED:true}
honyrun.jwt.device-binding-enabled=${HONYRUN_JWT_DEVICE_BINDING_ENABLED:false}
honyrun.jwt.ip-validation-enabled=${HONYRUN_JWT_IP_VALIDATION_ENABLED:false}

# JWT黑名单配置 - 测试环境
honyrun.jwt.blacklist-cache-time=${HONYRUN_JWT_BLACKLIST_CACHE_TIME:300000}

# JWT并发控制 - 测试环境
honyrun.jwt.max-concurrent-activities=${HONYRUN_JWT_MAX_CONCURRENT_ACTIVITIES:5}

# JWT密钥轮换配置 - 测试环境
honyrun.jwt.key-rotation-enabled=${HONYRUN_JWT_KEY_ROTATION_ENABLED:false}
honyrun.jwt.key-rotation-interval=${HONYRUN_JWT_KEY_ROTATION_INTERVAL:86400000}
honyrun.jwt.key-version=${HONYRUN_JWT_KEY_VERSION:v1.0}
honyrun.jwt.old-key-retention-time=${HONYRUN_JWT_OLD_KEY_RETENTION_TIME:3600000}

# JWT默认IP配置 - 测试环境
honyrun.jwt.default-ip=${HONYRUN_JWT_DEFAULT_IP:127.0.0.1}

# 安全配置
honyrun.security.cors.allowed-origins=${HONYRUN_SECURITY_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
honyrun.security.cors.allowed-methods=${HONYRUN_SECURITY_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
honyrun.security.cors.allowed-headers=${HONYRUN_SECURITY_CORS_ALLOWED_HEADERS:*}
honyrun.security.cors.allow-credentials=${HONYRUN_SECURITY_CORS_ALLOW_CREDENTIALS:true}

# ========================================
# Netty配置 - 测试环境
# ========================================
# Netty服务器配置 - 测试环境使用随机端口
honyrun.netty.server.port=0
honyrun.netty.server.wiretap=false
honyrun.netty.server.access-log=false
honyrun.netty.server.compression=false
honyrun.netty.server.forwarded=false

# Netty HTTP配置 - 测试环境
honyrun.netty.http.max-initial-line-length=4096
honyrun.netty.http.max-header-size=8192
honyrun.netty.http.validate-headers=true
honyrun.netty.http.initial-buffer-size=512

# Netty线程池配置 - 测试环境
honyrun.netty.thread-pool.daemon=true
honyrun.netty.thread-pool.http-thread-name-prefix=test-http-
honyrun.netty.thread-pool.thread-name-prefix=test-netty-
honyrun.netty.thread-pool.event-loop-threads=2
honyrun.netty.thread-pool.http-event-loop-threads=2

# Netty连接配置 - 测试环境
honyrun.netty.connection.connect-timeout-millis=5000
honyrun.netty.connection.max-connections=100
honyrun.netty.connection.backlog=128
honyrun.netty.connection.pending-acquire-timeout=5000
honyrun.netty.connection.max-idle-time=300000
honyrun.netty.connection.max-life-time=600000
honyrun.netty.connection.keep-alive=true
honyrun.netty.connection.tcp-no-delay=true
honyrun.netty.connection.reuse-address=true
honyrun.netty.connection.idle-timeout=PT5M
honyrun.netty.connection.request-timeout=PT10S
honyrun.netty.connection.read-timeout-seconds=10
honyrun.netty.connection.write-timeout-seconds=10
honyrun.netty.connection.pending-acquire-max-count=100
honyrun.netty.connection.metrics=false
honyrun.netty.connection.evict-in-background=PT10S

# Netty缓冲区配置 - 测试环境
honyrun.netty.buffer.receive-buffer-size=8192
honyrun.netty.buffer.send-buffer-size=8192
honyrun.netty.buffer.write-buffer-low-water-mark=4096
honyrun.netty.buffer.write-buffer-high-water-mark=8192

# ========================================
# 安全配置 - 测试环境
# ========================================
# 测试环境安全配置 - 必须使用签名，禁止未签名请求
security.request.signature.enabled=true

# 统一安全检测配置（标准化配置前缀）
honyrun.security.detection.enabled=true
honyrun.security.detection.patterns=<script,</script,javascript:,onerror=,onload=,union select,select * from,drop table,or 1=1,or '1'='1',' or '1'='1',--,/*,*/,;--
honyrun.security.detection.max-quotes-threshold=500

# ========================================
# 服务器配置 - 测试环境
# 整合自src/main/resources/application-test.properties的服务器配置
# ========================================
# 服务器端口（测试环境使用随机端口）
server.port=0
# 服务器配置（整合自application-env-template.properties和application-unified-config.properties）
honyrun.server.connection-timeout=${HONYRUN_SERVER_CONNECTION_TIMEOUT:30000}
honyrun.server.read-timeout=${HONYRUN_SERVER_READ_TIMEOUT:60000}
honyrun.server.write-timeout=${HONYRUN_SERVER_WRITE_TIMEOUT:60000}
# ========================================
# 测试环境CORS配置
# ========================================
cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,X-API-Version,Accept,Accept-Language,Accept-Encoding,Cache-Control,X-CSRF-Token,X-Request-ID,X-Forwarded-For,X-Real-IP,X-Custom-Admin-Token
cors.allow-credentials=true
cors.max-age=3600

# ========================================
# 缓存配置 - 测试环境
# 整合自src/main/resources/application-test.properties的缓存配置
# ========================================
honyrun.cache.redis.default-ttl=5m
honyrun.cache.redis.null-values=false
honyrun.cache.l1.enabled=false
honyrun.cache.warmup.enabled=false

# 缓存配置（整合自application-unified-config.properties）
honyrun.cache.ttl.default=${HONYRUN_CACHE_TTL_DEFAULT:3600}
honyrun.cache.ttl.user=${HONYRUN_CACHE_TTL_USER:1800}
honyrun.cache.ttl.system=${HONYRUN_CACHE_TTL_SYSTEM:7200}
honyrun.cache.ttl.session=${HONYRUN_CACHE_TTL_SESSION:1800}
honyrun.cache.ttl.token=${HONYRUN_CACHE_TTL_TOKEN:86400}

# 缓存键前缀
honyrun.cache.prefix.user=${HONYRUN_CACHE_PREFIX_USER:user:}
honyrun.cache.prefix.system=${HONYRUN_CACHE_PREFIX_SYSTEM:system:}
honyrun.cache.prefix.session=${HONYRUN_CACHE_PREFIX_SESSION:session:}
honyrun.cache.prefix.token=${HONYRUN_CACHE_PREFIX_TOKEN:token:}

# ========================================
# 监控配置 - 测试环境
# 整合自src/main/resources/application-test.properties的监控配置
# ========================================
# 监控间隔（毫秒）
honyrun.monitoring.interval.health=${HONYRUN_MONITORING_INTERVAL_HEALTH:30000}
honyrun.monitoring.interval.metrics=${HONYRUN_MONITORING_INTERVAL_METRICS:60000}
honyrun.monitoring.interval.performance=${HONYRUN_MONITORING_INTERVAL_PERFORMANCE:300000}

# 监控阈值
honyrun.monitoring.threshold.cpu=${HONYRUN_MONITORING_THRESHOLD_CPU:80}
honyrun.monitoring.threshold.memory=${HONYRUN_MONITORING_THRESHOLD_MEMORY:85}
honyrun.monitoring.threshold.disk=${HONYRUN_MONITORING_THRESHOLD_DISK:90}

# ========================================
# 重试配置 - 测试环境
# 整合自src/main/resources/application-test.properties的重试配置
# ========================================
# 重试次数
honyrun.retry.max-attempts=${HONYRUN_RETRY_MAX_ATTEMPTS:3}
# 重试延迟（毫秒）
honyrun.retry.delay=${HONYRUN_RETRY_DELAY:1000}
# 重试退避倍数
honyrun.retry.backoff-multiplier=${HONYRUN_RETRY_BACKOFF_MULTIPLIER:2}

# ========================================
# URL配置 - 测试环境
# 整合自src/main/resources/application-test.properties的URL配置
# ========================================
# 基础URL
honyrun.url.base=${HONYRUN_URL_BASE:http://localhost:8901}
# API基础路径
honyrun.url.api-base=${HONYRUN_URL_API_BASE:/api/v1}
# 健康检查URL
honyrun.url.health=${HONYRUN_URL_HEALTH:/actuator/health}
# 指标URL
honyrun.url.metrics=${HONYRUN_URL_METRICS:/actuator/metrics}
# ========================================
# 日志配置 - 测试环境
# 整合自src/main/resources/application-test.properties的日志配置
# ========================================
logging.level.root=INFO
logging.level.com.honyrun=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.cors=DEBUG
logging.level.org.springframework.security.web.server=DEBUG
logging.level.reactor.netty=INFO
logging.level.io.r2dbc=DEBUG
logging.level.org.springframework.r2dbc=DEBUG

# 日志配置（整合自src/main/resources/application-test.properties）
logging.level.com.honyrun=INFO
logging.level.org.springframework.r2dbc=INFO
logging.level.org.springframework.data.redis=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=backend/logs/honyrun-test.log
logging.file.max-size=100MB
logging.file.max-history=30

# 测试环境日志输出与格式由自定义 logback-spring.xml 统一管理（移除 logging.file.* 与 logging.pattern.*）

# ========================================
# 测试环境监控配置
# 整合自src/main/resources/application-test.properties的监控配置
# ========================================
# Actuator测试环境配置
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# Actuator配置（整合自src/main/resources/application-test.properties）
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=false

# 测试环境健康检查
management.health.redis.enabled=false
management.health.r2dbc.enabled=true
management.health.diskspace.enabled=true

# ========================================
# Spring Boot WebFlux配置 - 测试环境
# ========================================
# 使用Spring Boot WebFlux最佳实践
# 排除OpenAPI配置，避免端口占位符问题
spring.autoconfigure.exclude=org.springdoc.core.configuration.SpringDocConfiguration

# WebFlux配置 - 测试环境不设置base-path，避免与路由中的/api前缀重复
# spring.webflux.base-path=/api

# ========================================
# 缓存配置 - 测试环境
# ========================================
honyrun.cache.redis.default-ttl=5m
honyrun.cache.redis.null-values=false
honyrun.cache.l1.enabled=false
honyrun.cache.warmup.enabled=false

# ========================================
# 性能配置 - 测试环境
# ========================================
spring.webflux.multipart.max-in-memory-size=1MB
spring.webflux.multipart.max-disk-usage-per-part=10MB
spring.webflux.multipart.max-parts=128

# ========================================
# Jackson配置
# ========================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.serialization.write-durations-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ========================================
# 安全常量配置 - 测试环境（已整合到上方JWT配置中）
# ========================================
# 注意：JWT配置已统一整合到上方，此处不再重复配置
# 避免重复配置导致的配置冲突和维护困难

# 密码策略配置
honyrun.security.password.min-length=${HONYRUN_SECURITY_PASSWORD_MIN_LENGTH:3}
honyrun.security.password.max-length=${HONYRUN_SECURITY_PASSWORD_MAX_LENGTH:50}
honyrun.security.password.require-digit=${HONYRUN_SECURITY_PASSWORD_REQUIRE_DIGIT:false}
honyrun.security.password.require-letter=${HONYRUN_SECURITY_PASSWORD_REQUIRE_LETTER:false}
honyrun.security.password.require-special=${HONYRUN_SECURITY_PASSWORD_REQUIRE_SPECIAL:false}
honyrun.security.password.history-count=${HONYRUN_SECURITY_PASSWORD_HISTORY_COUNT:3}
honyrun.security.password.expire-days=${HONYRUN_SECURITY_PASSWORD_EXPIRE_DAYS:365}

# 登录安全配置
honyrun.security.login.max-attempts=${HONYRUN_SECURITY_LOGIN_MAX_ATTEMPTS:10}
honyrun.security.login.account-lock-minutes=${HONYRUN_SECURITY_LOGIN_ACCOUNT_LOCK_MINUTES:5}
honyrun.security.login.attempt-reset-minutes=${HONYRUN_SECURITY_LOGIN_ATTEMPT_RESET_MINUTES:10}
honyrun.security.login.session-timeout-minutes=${HONYRUN_SECURITY_LOGIN_SESSION_TIMEOUT_MINUTES:480}
honyrun.security.login.remember-me-expire-days=${HONYRUN_SECURITY_LOGIN_REMEMBER_ME_EXPIRE_DAYS:7}

# 加密算法配置
honyrun.security.encryption.bcrypt-strength=${HONYRUN_SECURITY_ENCRYPTION_BCRYPT_STRENGTH:4}
honyrun.security.encryption.rsa-key-size=${HONYRUN_SECURITY_ENCRYPTION_RSA_KEY_SIZE:1024}

# 安全头配置
honyrun.security.headers.csp-policy=${HONYRUN_SECURITY_HEADERS_CSP_POLICY:default-src 'self' 'unsafe-inline' 'unsafe-eval'}
honyrun.security.headers.x-frame-options=${HONYRUN_SECURITY_HEADERS_X_FRAME_OPTIONS:SAMEORIGIN}
honyrun.security.headers.x-content-type-options=${HONYRUN_SECURITY_HEADERS_X_CONTENT_TYPE_OPTIONS:nosniff}
honyrun.security.headers.x-xss-protection=${HONYRUN_SECURITY_HEADERS_X_XSS_PROTECTION:0}
honyrun.security.headers.hsts=${HONYRUN_SECURITY_HEADERS_HSTS:}
honyrun.security.headers.referrer-policy=${HONYRUN_SECURITY_HEADERS_REFERRER_POLICY:no-referrer-when-downgrade}

# 限流配置（测试环境放宽限制）
honyrun.security.rate-limit.default-per-minute=${HONYRUN_SECURITY_RATE_LIMIT_DEFAULT_PER_MINUTE:1000}
honyrun.security.rate-limit.login-per-minute=${HONYRUN_SECURITY_RATE_LIMIT_LOGIN_PER_MINUTE:100}
honyrun.security.rate-limit.api-per-minute=${HONYRUN_SECURITY_RATE_LIMIT_API_PER_MINUTE:1000}
honyrun.security.rate-limit.upload-per-minute=${HONYRUN_SECURITY_RATE_LIMIT_UPLOAD_PER_MINUTE:100}

# CORS配置
honyrun.security.cors.allowed-origins=${HONYRUN_SECURITY_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,http://localhost:8901}
honyrun.security.cors.allowed-methods=${HONYRUN_SECURITY_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS,PATCH}
honyrun.security.cors.allowed-headers=${HONYRUN_SECURITY_CORS_ALLOWED_HEADERS:*}
honyrun.security.cors.exposed-headers=${HONYRUN_SECURITY_CORS_EXPOSED_HEADERS:*}
honyrun.security.cors.preflight-max-age=${HONYRUN_SECURITY_CORS_PREFLIGHT_MAX_AGE:86400}

# CSRF保护配置（测试环境禁用）
honyrun.security.csrf.enabled=${HONYRUN_SECURITY_CSRF_ENABLED:false}
honyrun.security.csrf.origin-validation=${HONYRUN_SECURITY_CSRF_ORIGIN_VALIDATION:false}
honyrun.security.csrf.double-cookie=${HONYRUN_SECURITY_CSRF_DOUBLE_COOKIE:false}
honyrun.security.csrf.same-origin-check=${HONYRUN_SECURITY_CSRF_SAME_ORIGIN_CHECK:false}
honyrun.security.csrf.token-expiration-minutes=${HONYRUN_SECURITY_CSRF_TOKEN_EXPIRATION_MINUTES:60}
honyrun.security.csrf.allowed-origins=${HONYRUN_SECURITY_CSRF_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
honyrun.security.csrf.token-header-name=${HONYRUN_SECURITY_CSRF_TOKEN_HEADER_NAME:X-CSRF-Token}
honyrun.security.csrf.cookie-name=${HONYRUN_SECURITY_CSRF_COOKIE_NAME:CSRF-TOKEN}
honyrun.security.csrf.secure-cookie=${HONYRUN_SECURITY_CSRF_SECURE_COOKIE:false}
honyrun.security.csrf.http-only-cookie=${HONYRUN_SECURITY_CSRF_HTTP_ONLY_COOKIE:false}

# ========================================
# 业务超时配置 - 测试环境
# ========================================
# 文件上传配置
honyrun.upload.max-file-size=${HONYRUN_UPLOAD_MAX_FILE_SIZE:50MB}
honyrun.upload.max-request-size=${HONYRUN_UPLOAD_MAX_REQUEST_SIZE:100MB}
honyrun.upload.timeout=${HONYRUN_UPLOAD_TIMEOUT:600000}

# 缓存超时配置
honyrun.cache.default-timeout=${HONYRUN_CACHE_DEFAULT_TIMEOUT:10000}
honyrun.cache.user-timeout=${HONYRUN_CACHE_USER_TIMEOUT:300000}
honyrun.cache.session-timeout=${HONYRUN_CACHE_SESSION_TIMEOUT:1800000}

# 任务调度超时配置
honyrun.scheduler.task-timeout=${HONYRUN_SCHEDULER_TASK_TIMEOUT:60000}
honyrun.scheduler.health-check-timeout=${HONYRUN_SCHEDULER_HEALTH_CHECK_TIMEOUT:10000}
honyrun.scheduler.cleanup-timeout=${HONYRUN_SCHEDULER_CLEANUP_TIMEOUT:30000}

# 性能测试配置
honyrun.performance.test.duration=${HONYRUN_PERFORMANCE_TEST_DURATION:100}
honyrun.performance.test.concurrent-users=${HONYRUN_PERFORMANCE_TEST_CONCURRENT_USERS:10}
honyrun.performance.test.ramp-up-time=${HONYRUN_PERFORMANCE_TEST_RAMP_UP_TIME:5000}

# 日志配置
honyrun.logging.max-file-size=${HONYRUN_LOGGING_MAX_FILE_SIZE:5MB}
honyrun.logging.max-history=${HONYRUN_LOGGING_MAX_HISTORY:7}
honyrun.logging.total-size-cap=${HONYRUN_LOGGING_TOTAL_SIZE_CAP:100MB}

# 验证码配置
honyrun.captcha.timeout=${HONYRUN_CAPTCHA_TIMEOUT:600000}
honyrun.captcha.length=${HONYRUN_CAPTCHA_LENGTH:4}
honyrun.captcha.width=${HONYRUN_CAPTCHA_WIDTH:100}
honyrun.captcha.height=${HONYRUN_CAPTCHA_HEIGHT:30}

# 邮件发送超时配置
honyrun.mail.connection-timeout=${HONYRUN_MAIL_CONNECTION_TIMEOUT:10000}
honyrun.mail.read-timeout=${HONYRUN_MAIL_READ_TIMEOUT:30000}
honyrun.mail.write-timeout=${HONYRUN_MAIL_WRITE_TIMEOUT:30000}

# ========================================
# 测试用户配置
# ========================================
# 系统用户
honyrun.test.user.system.username=${HONYRUN_TEST_USER_SYSTEM_USERNAME:honyrun-sys}
honyrun.test.user.system.password=${HONYRUN_TEST_USER_SYSTEM_PASSWORD:honyrun@sys}
honyrun.test.user.system2.username=${HONYRUN_TEST_USER_SYSTEM2_USERNAME:honyrunsys2}
honyrun.test.user.system2.password=${HONYRUN_TEST_USER_SYSTEM2_PASSWORD:honyrun@sys}

# 普通用户
honyrun.test.user.normal.user1.username=${HONYRUN_TEST_USER_NORMAL_USER1_USERNAME:user1}
honyrun.test.user.normal.user1.password=${HONYRUN_TEST_USER_NORMAL_USER1_PASSWORD:honyrun@sys}
honyrun.test.user.normal.user2.username=${HONYRUN_TEST_USER_NORMAL_USER2_USERNAME:user2}
honyrun.test.user.normal.user2.password=${HONYRUN_TEST_USER_NORMAL_USER2_PASSWORD:honyrun@sys}

# 测试客户端密钥
honyrun.test.client.default.secret=${HONYRUN_TEST_CLIENT_DEFAULT_SECRET:default-secret-key}
honyrun.test.client.web.secret=${HONYRUN_TEST_CLIENT_WEB_SECRET:secret-key}
honyrun.test.client.mobile.secret=${HONYRUN_TEST_CLIENT_MOBILE_SECRET:mobile-secret-key}

# ========================================
# 测试数据配置
# ========================================
# 测试密码哈希
honyrun.test.password.hash.bcrypt12=${HONYRUN_TEST_PASSWORD_HASH_BCRYPT12:$2a$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewfBzj6up6tMjN3a}
honyrun.test.password.hash.bcrypt10=${HONYRUN_TEST_PASSWORD_HASH_BCRYPT10:$2a$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2uheWG/igi.}
honyrun.test.password.hash.bcrypt4=${HONYRUN_TEST_PASSWORD_HASH_BCRYPT4:$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewfBzj6up6tMjN3a}

# 测试邮箱配置
honyrun.test.email.valid=${HONYRUN_TEST_EMAIL_VALID:test@example.com}
honyrun.test.email.invalid=${HONYRUN_TEST_EMAIL_INVALID:invalid-email}
honyrun.test.email.domain=${HONYRUN_TEST_EMAIL_DOMAIN:example.com}

# 测试URL配置
honyrun.test.url.localhost=${HONYRUN_TEST_URL_LOCALHOST:http://localhost:8901}
honyrun.test.url.api=${HONYRUN_TEST_URL_API:http://localhost:8901/api}
honyrun.test.url.websocket=${HONYRUN_TEST_URL_WEBSOCKET:ws://localhost:8901/ws}

# ========================================
# 测试环境请求签名验证配置
# ========================================
# 测试环境默认禁用请求签名验证，避免测试复杂化
security.request.signature.enabled=${SECURITY_REQUEST_SIGNATURE_ENABLED:false}
security.request.signature.validity_period=${SECURITY_REQUEST_SIGNATURE_VALIDITY_PERIOD:600}
# 测试环境使用固定的客户端密钥便于测试
security.default.client.secret=${SECURITY_DEFAULT_CLIENT_SECRET:default-secret-key}
security.client.honyrun-web.secret=${SECURITY_CLIENT_HONYRUN_WEB_SECRET:secret-key}
security.client.honyrun-mobile.secret=${SECURITY_CLIENT_HONYRUN_MOBILE_SECRET:mobile-secret-key}
