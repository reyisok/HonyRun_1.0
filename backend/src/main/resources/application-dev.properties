# ========================================
# HonyRun WebFlux响应式系统开发环境配置
# @author: Mr.Rey Copyright © 2025
# @created: 2025-10-26 01:36:12
# @modified: 2025-10-26 01:36:12
# @version: 1.0.1
# @description: 开发环境专用配置，32GB高性能环境优化，整合所有配置项
# ========================================

# ========================================
# 应用基础环境变量配置（整合自application-env-template.properties）
# ========================================
# 应用名称
honyrun.app.name=${HONYRUN_APP_NAME:honyrun-reactive}
# 应用版本
honyrun.app.version=${HONYRUN_APP_VERSION:2.0.0}
# 应用环境
honyrun.app.environment=${HONYRUN_APP_ENVIRONMENT:development}
# 构建版本
honyrun.build.version=${HONYRUN_BUILD_VERSION:20251027001}
# 构建时间
honyrun.build.time=${HONYRUN_BUILD_TIME:2025-10-26T01:36:12Z}

# ========================================
# 开发环境标识
# ========================================
app.environment=development

# ========================================
# 数据库配置（整合自application-env-template.properties和application-unified-config.properties）
# ========================================
# MySQL数据库主机地址
honyrun.database.host=${HONYRUN_DB_HOST:localhost}
# MySQL数据库端口 (固定8906)
honyrun.database.port=${HONYRUN_DB_PORT:8906}
# 数据库名称 (统一使用honyrundb)
honyrun.database.name=${HONYRUN_DB_NAME:honyrundb}
# 数据库用户名
honyrun.database.username=${HONYRUN_DB_USERNAME:honyrunMysql}
# 数据库密码
honyrun.database.password=${HONYRUN_DB_PASSWORD:honyrun@sys}
# 数据库驱动
honyrun.database.driver=${HONYRUN_DB_DRIVER:mysql}
# 数据库时区
honyrun.database.timezone=${HONYRUN_DB_TIMEZONE:Asia/Shanghai}

# 数据库连接池配置（整合自application-unified-config.properties）
honyrun.database.pool.initial-size=${HONYRUN_DB_POOL_INITIAL_SIZE:5}
honyrun.database.pool.max-size=${HONYRUN_DB_POOL_MAX_SIZE:20}
# 数据库连接池配置 - 开发环境优化

# ========================================
# 数据库初始化配置
# ========================================
# 开发环境启用数据库自动初始化
honyrun.dev.db.init.enabled=true
# 连接池最小空闲连接数 - 保持最少连接数以提高响应速度
honyrun.database.pool.min-idle=${HONYRUN_DB_POOL_MIN_IDLE:3}
# 连接最大空闲时间 - 超过此时间的空闲连接将被回收
honyrun.database.pool.max-idle-time=${HONYRUN_DB_POOL_MAX_IDLE_TIME:PT30M}
# 连接有效性验证查询 - 用于检测连接是否有效
honyrun.database.pool.validation-query=${HONYRUN_DB_POOL_VALIDATION_QUERY:SELECT 1}
# 获取连接最大等待时间 - 超时将抛出异常
honyrun.database.pool.max-acquire-time=${HONYRUN_DB_POOL_MAX_ACQUIRE_TIME:PT30S}
# 创建连接最大等待时间 - 新建连接的超时限制
honyrun.database.pool.max-create-connection-time=${HONYRUN_DB_POOL_MAX_CREATE_CONNECTION_TIME:PT30S}
# 连接最大生命周期 - 超过此时间的连接将被强制回收
honyrun.database.pool.max-life-time=${HONYRUN_DB_POOL_MAX_LIFE_TIME:PT2H}
# 获取连接重试次数 - 失败后的重试机制
honyrun.database.pool.acquire-retry=${HONYRUN_DB_POOL_ACQUIRE_RETRY:5}
# 连接泄漏检测阈值 - 超过此时间未归还的连接将被标记为泄漏
honyrun.database.pool.leak-detection-threshold=${HONYRUN_DB_POOL_LEAK_DETECTION_THRESHOLD:PT5M}

# 表名配置（整合自application-unified-config.properties）
# 用户表名 - 存储用户基本信息
honyrun.database.table.users=${HONYRUN_DB_TABLE_USERS:users}
# 系统日志表名 - 记录系统操作日志
honyrun.database.table.system-log=${HONYRUN_DB_TABLE_SYSTEM_LOG:system_log}
# 事务日志表名 - 记录业务事务日志
honyrun.database.table.transaction-log=${HONYRUN_DB_TABLE_TRANSACTION_LOG:transaction_log}

# 字段名配置（整合自application-unified-config.properties）
# 用户类型字段名 - 区分系统用户和普通用户
honyrun.database.field.user-type=${HONYRUN_DB_FIELD_USER_TYPE:user_type}
# 用户ID字段名 - 用户唯一标识
honyrun.database.field.user-id=${HONYRUN_DB_FIELD_USER_ID:user_id}
# 用户名字段名 - 用户登录名
honyrun.database.field.username=${HONYRUN_DB_FIELD_USERNAME:username}
# 邮箱字段名 - 用户邮箱地址
honyrun.database.field.email=${HONYRUN_DB_FIELD_EMAIL:email}
# 手机号字段名 - 用户手机号码
honyrun.database.field.phone=${HONYRUN_DB_FIELD_PHONE:phone}
# 状态字段名 - 记录状态信息
honyrun.database.field.status=${HONYRUN_DB_FIELD_STATUS:status}
# 创建时间字段名 - 记录创建时间
honyrun.database.field.created-at=${HONYRUN_DB_FIELD_CREATED_AT:created_at}
# 更新时间字段名 - 记录最后更新时间
honyrun.database.field.updated-at=${HONYRUN_DB_FIELD_UPDATED_AT:updated_at}

# Spring R2DBC配置 - 响应式数据库连接
# R2DBC驱动类型 - 使用MySQL响应式驱动
spring.r2dbc.driver=mysql
# 数据库主机地址 - 开发环境数据库服务器
spring.r2dbc.host=${HONYRUN_R2DBC_HOST:localhost}
# 数据库端口 - MySQL服务端口
spring.r2dbc.port=${HONYRUN_R2DBC_PORT:8906}
# 数据库名称 - 项目专用数据库
spring.r2dbc.database=${HONYRUN_R2DBC_DATABASE:honyrundb}
# 数据库用户名 - 项目专用数据库用户
spring.r2dbc.username=${HONYRUN_R2DBC_USERNAME:honyrunMysql}
# 数据库密码 - 数据库用户密码
spring.r2dbc.password=${HONYRUN_R2DBC_PASSWORD:honyrun@sys}
# 启用连接池 - 提高数据库连接性能
spring.r2dbc.pool.enabled=true
# 连接池配置引用 - 使用统一的连接池配置
spring.r2dbc.pool.initial-size=${honyrun.database.pool.initial-size}
spring.r2dbc.pool.max-size=${honyrun.database.pool.max-size}
spring.r2dbc.pool.max-idle-time=${honyrun.database.pool.max-idle-time}
spring.r2dbc.pool.max-acquire-time=${honyrun.database.pool.max-acquire-time}
spring.r2dbc.pool.max-create-connection-time=${honyrun.database.pool.max-create-connection-time}
spring.r2dbc.pool.max-life-time=${honyrun.database.pool.max-life-time}
spring.r2dbc.pool.acquire-retry=${honyrun.database.pool.acquire-retry}
spring.r2dbc.pool.leak-detection-threshold=${honyrun.database.pool.leak-detection-threshold}

# Redis配置（整合自application-unified-config.properties）
# Redis服务器主机地址 - 开发环境Redis服务器
spring.data.redis.host=${HONYRUN_REDIS_HOST:localhost}
# Redis服务器端口 - Redis服务端口
spring.data.redis.port=${HONYRUN_REDIS_PORT:8902}
# Redis数据库索引 - 使用默认数据库
spring.data.redis.database=${HONYRUN_REDIS_DATABASE:0}
# Redis连接密码 - Redis服务器认证密码
spring.data.redis.password=${HONYRUN_REDIS_PASSWORD:honyrun@sys}
# Redis操作超时时间 - 单次操作的最大等待时间
spring.data.redis.timeout=${HONYRUN_REDIS_TIMEOUT:30000ms}
# Redis连接超时时间 - 建立连接的最大等待时间
spring.data.redis.connect-timeout=${HONYRUN_REDIS_CONNECT_TIMEOUT:30000ms}

# ========================================
# 监控任务配置 - 开发环境
# ========================================
# 启用统一监控调度器任务
honyrun.monitoring.task.enabled=true
# 监控任务执行间隔配置
honyrun.monitoring.performance.enabled=true
honyrun.monitoring.system.enabled=true
honyrun.monitoring.webflux.enabled=true
honyrun.monitoring.r2dbc.enabled=true
honyrun.monitoring.redis.enabled=true

# 健康检查间隔配置 - 优化为5分钟，减少频繁的HTTP连接
honyrun.monitoring.schedule.health-check-interval=300000

# 监控时间格式配置
honyrun.monitoring.time-format-pattern=HH:mm
honyrun.monitoring.datetime-format-pattern=MM-dd HH:mm

# ========================================
# 32GB高性能开发环境优化配置（整合自application-dev-performance.properties）
# ========================================
# JVM内存配置
honyrun.jvm.heap.initial=${HONYRUN_JVM_HEAP_INITIAL:8g}
honyrun.jvm.heap.max=${HONYRUN_JVM_HEAP_MAX:16g}
honyrun.jvm.gc.type=${HONYRUN_JVM_GC_TYPE:G1GC}
honyrun.jvm.gc.string-dedup=${HONYRUN_JVM_GC_STRING_DEDUP:true}

# Maven构建配置
honyrun.maven.memory=${HONYRUN_MAVEN_MEMORY:4g}
honyrun.maven.threads=${HONYRUN_MAVEN_THREADS:8C}

# 并行处理配置
honyrun.parallel.junit=${HONYRUN_PARALLEL_JUNIT:true}
honyrun.parallel.cpu-cores=${HONYRUN_PARALLEL_CPU_CORES:16}

# 缓存优化配置
honyrun.cache.maven-deps=${HONYRUN_CACHE_MAVEN_DEPS:true}
honyrun.cache.ide-index=${HONYRUN_CACHE_IDE_INDEX:true}

# ========================================
# 开发环境特定配置
# ========================================
# 开发模式启用 - 移除 spring.profiles.active 配置，避免循环引用
# spring.profiles.active=dev  # 已移除，由启动参数或环境变量指定
# 热重载配置
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# 开发环境数据库配置优化
spring.r2dbc.pool.max-create-connection-time=PT30S
spring.r2dbc.pool.max-acquire-time=PT30S
spring.r2dbc.pool.max-life-time=PT30M
spring.r2dbc.pool.max-idle-time=PT10M
spring.r2dbc.pool.validation-query=SELECT 1

# ========================================
# 缓存优化配置 - 开发环境 - 32GB环境优化
# ========================================
# Redis缓存配置 - 32GB环境增大缓存容量
honyrun.cache.redis.default-ttl=1800000
honyrun.cache.redis.null-values=false
honyrun.cache.redis.optimization.enabled=true
honyrun.cache.redis.optimization.pipeline-size=1000
honyrun.cache.redis.optimization.batch-size=500

# 多级缓存配置 - 32GB环境优化
honyrun.cache.l1.enabled=true
honyrun.cache.l1.max-size=20000
honyrun.cache.l1.expire-after-write=900000

# 缓存预热配置
honyrun.cache.warmup.enabled=true
honyrun.cache.warmup.delay=30000

# ========================================
# 【重要】MySQL为项目必备组件 - 开发环境配置
# ========================================
# MySQL是本项目的核心数据存储组件，必须确保连接成功：
# - 连接地址：localhost:8906
# - 数据库名：honyrundb
# - 用户名：honyrunMysql
# - 密码：honyrun@sys
# - 启动检测：通过EssentialComponentsValidator进行连接验证
# - 失败处理：连接失败将导致应用启动终止
# ========================================

# R2DBC MySQL数据库配置 - 开发环境（Windows 11优化）
# MySQL数据库连接配置（使用asyncer r2dbc-mysql驱动）- 使用127.0.0.1避免Netty主机名解析问题
# 重要：本项目使用唯一数据库名称 honyrundb，禁止使用其他数据库名称（如honyrundb等）
# 数据库名称标准：honyrundb（统一规范，不得更改）
spring.r2dbc.url=${HONYRUN_MYSQL_R2DBC_URL:r2dbc:mysql://localhost:8906/honyrundb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true}
spring.r2dbc.username=${HONYRUN_MYSQL_USERNAME:honyrunMysql}
spring.r2dbc.password=${HONYRUN_MYSQL_PASSWORD:honyrun@sys}

# 开发环境数据库初始化配置（由R2DBC初始化器执行统一schema）
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true
spring.sql.init.schema-locations=classpath:db/unified-schema.sql

# Dev R2DBC 初始化器开关（启用数据库初始化）
honyrun.dev.db.init.enabled=true
honyrun.startup.r2dbc.enabled=true

# R2DBC连接池配置 - 开发环境优化配置（解决连接超时问题）
spring.r2dbc.pool.enabled=${HONYRUN_MYSQL_POOL_ENABLED:true}
# 初始连接数 - 减少初始连接数
spring.r2dbc.pool.initial-size=${HONYRUN_MYSQL_POOL_INITIAL_SIZE:3}
# 最大连接数 - 减少最大连接数
spring.r2dbc.pool.max-size=${HONYRUN_MYSQL_POOL_MAX_SIZE:15}
# 最大空闲时间
spring.r2dbc.pool.max-idle-time=${HONYRUN_MYSQL_POOL_MAX_IDLE_TIME:PT10M}
# 获取连接最大等待时间 - 减少等待时间
spring.r2dbc.pool.max-acquire-time=${HONYRUN_MYSQL_POOL_MAX_ACQUIRE_TIME:PT5S}
# 创建连接最大等待时间 - 减少创建时间
spring.r2dbc.pool.max-create-connection-time=${HONYRUN_MYSQL_POOL_MAX_CREATE_CONNECTION_TIME:PT5S}
# 连接最大生命周期
spring.r2dbc.pool.max-life-time=${HONYRUN_MYSQL_POOL_MAX_LIFE_TIME:PT1H}
# 连接验证查询
spring.r2dbc.pool.validation-query=${HONYRUN_MYSQL_POOL_VALIDATION_QUERY:SELECT 1}
# 连接验证配置 - 禁用共享连接验证，避免启动时验证冲突
spring.r2dbc.pool.test-on-borrow=false
spring.r2dbc.pool.test-while-idle=false
# 连接验证深度 - 禁用验证，避免启动阶段的连接验证问题
# spring.r2dbc.pool.validation-depth=LOCAL
# 后台清理间隔 - 增加清理间隔，减少频繁清理
spring.r2dbc.pool.background-eviction-interval=PT30S
# 获取连接重试次数
spring.r2dbc.pool.acquire-retry=3
# 连接泄漏检测超时
spring.r2dbc.pool.leak-detection-threshold=PT2M

# ========================================
# 【重要】Redis为项目必备组件 - 开发环境配置
# ========================================
# Redis是本项目的核心缓存和会话存储组件，必须确保连接成功：
# - 连接地址：localhost:8902
# - 数据库：DB1
# - 密码：honyrun@sys
# - 启动检测：通过EssentialComponentsValidator进行连接验证
# - 失败处理：连接失败将导致应用启动终止
# ========================================

# Redis响应式配置 - 开发环境（优化版本）
# 端口规范：应用 8901，Redis 8902，MySQL 8906（项目端口范围 8901-8910）
# Redis可配置降级配置
honyrun.redis.enabled=true
# 默认关闭降级模式，Redis故障时立即停止应用
honyrun.redis.graceful-degradation.enabled=false
# Redis故障处理策略：FAIL_FAST（快速失败）或 DEGRADATION（降级模式）
honyrun.redis.failure-strategy=FAIL_FAST
honyrun.redis.connection-check.enabled=true
honyrun.redis.connection-check.timeout=8s
honyrun.redis.connection-check.retry-attempts=3
honyrun.redis.connection-check.retry-delay=1s

# ========================================
# Redis连接池配置 - 连接稳定性优化版本
# ========================================
# - 关闭激进验证：禁用所有连接验证，避免验证过程中的中断
# - 减少回收频率：将回收间隔增加到60秒，避免连接被意外回收
# - 延长空闲时间：将连接空闲时间增加到5分钟，保持连接稳定性
# - 适中的连接池大小：避免过度并发导致的资源竞争
# - 禁用共享连接验证：避免连接验证超时导致的应用启动失败
# @author: Mr.Rey Copyright © 2025
# @created: 2025-10-27 12:26:43
# @modified: 2025-10-27 12:26:43
# @version: 1.2.0 - Redis连接稳定性优化
# ========================================

spring.data.redis.lettuce.pool.enabled=true

# 禁用共享连接验证 - 避免连接验证超时导致应用启动失败
spring.data.redis.lettuce.share-native-connection=false

# 连接池大小配置 - 增加连接池大小解决连接池耗尽问题
spring.data.redis.lettuce.pool.max-active=16
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=4
spring.data.redis.lettuce.pool.max-wait=10000

# 连接回收策略优化 - 解决连接意外关闭问题
# 将回收间隔从10秒增加到60秒，避免频繁回收导致的连接中断
spring.data.redis.lettuce.pool.time-between-eviction-runs=60000
# 将空闲时间从1分钟增加到5分钟，保持连接稳定性
spring.data.redis.lettuce.pool.min-evictable-idle-time=300000

# 连接验证策略优化 - 解决InterruptedException和验证中断问题
# 禁用借用时验证，避免每次获取连接都要验证造成的性能瓶颈和中断
spring.data.redis.lettuce.pool.test-on-borrow=false
spring.data.redis.lettuce.pool.test-on-return=false
# 禁用空闲时验证，避免后台验证过程中的连接中断
spring.data.redis.lettuce.pool.test-while-idle=false
# 移除验证超时配置，避免验证超时导致的连接失败
# spring.data.redis.lettuce.pool.validation-timeout=5000

# ========================================
# Redis连接超时配置 - 优化超时策略
# ========================================
# 根本原因：原有超时配置过短，导致连接建立和命令执行过程中出现超时中断
# 修复方案：增加各种超时时间，避免连接中断和命令执行失败
# @author: Mr.Rey Copyright © 2025
# @version: 1.1.0 - 超时策略优化
# ========================================

# Lettuce客户端关闭超时 - 从5秒增加到10秒，确保优雅关闭
spring.data.redis.lettuce.shutdown-timeout=10000
# 连接建立超时 - 增加到30秒，避免连接建立失败
spring.data.redis.connect-timeout=30000ms
# 命令执行超时 - 增加到30秒，避免命令执行中断
spring.data.redis.command-timeout=30000ms

# Redis集群配置（开发环境不启用）
# spring.data.redis.cluster.nodes=
# spring.data.redis.cluster.max-redirects=3

# ========================================
# Redis Repository配置 - 禁用自动扫描
# ========================================
# 禁用Spring Data Redis Repository自动配置和扫描
spring.data.redis.repositories.enabled=false

# ========================================
# 开发环境日志配置
# ========================================
# 开发环境日志级别
logging.level.root=INFO
logging.level.com.honyrun=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.io.r2dbc=DEBUG
logging.level.reactor.netty=DEBUG

# 开发环境日志输出由自定义 logback-spring.xml 统一管理（移除 logging.file.* 与 logging.pattern.console）

# ========================================
# 开发环境WebFlux配置
# ========================================
# 开发环境Netty配置
server.netty.connection-timeout=15000
server.netty.idle-timeout=120000

# WebFlux响应式配置 - 开发环境（统一安全限制）
spring.webflux.multipart.max-in-memory-size=1MB
spring.webflux.multipart.max-disk-usage-per-part=10MB
spring.webflux.multipart.max-parts=128

# ========================================
# JWT和安全配置（整合自application-jwt.properties和application-unified-config.properties）
# ========================================
# 注意：此配置整合自application-jwt.properties文件，统一使用honyrun.jwt.*前缀
# 按照项目规范要求，删除独立JWT配置文件，整合到各环境配置文件中
# 所有JWT相关配置必须使用honyrun.jwt.*前缀，符合JwtProperties类的@ConfigurationProperties规范
# ========================================

# JWT核心配置 - 开发环境
honyrun.jwt.secret=${HONYRUN_JWT_SECRET:honyrun-jwt-secret-key-for-development-environment-2025-must-be-at-least-64-chars}
honyrun.jwt.issuer=${HONYRUN_JWT_ISSUER:honyrun-system}
honyrun.jwt.audience=${HONYRUN_JWT_AUDIENCE:honyrun-users}
honyrun.jwt.subject=${HONYRUN_JWT_SUBJECT:honyrun-auth}

# JWT过期时间配置（毫秒）- 开发环境
honyrun.jwt.expiration=${HONYRUN_JWT_EXPIRATION:7200000}
honyrun.jwt.refresh-expiration=${HONYRUN_JWT_REFRESH_EXPIRATION:604800000}
honyrun.jwt.refresh-threshold=${HONYRUN_JWT_REFRESH_THRESHOLD:1800000}

# JWT功能开关 - 开发环境
honyrun.jwt.auto-refresh-enabled=${HONYRUN_JWT_AUTO_REFRESH_ENABLED:true}
honyrun.jwt.device-binding-enabled=${HONYRUN_JWT_DEVICE_BINDING_ENABLED:false}
honyrun.jwt.ip-validation-enabled=${HONYRUN_JWT_IP_VALIDATION_ENABLED:false}

# JWT黑名单配置 - 开发环境
honyrun.jwt.blacklist-cache-time=${HONYRUN_JWT_BLACKLIST_CACHE_TIME:7200000}

# JWT并发控制 - 开发环境
honyrun.jwt.max-concurrent-activities=${HONYRUN_JWT_MAX_CONCURRENT_ACTIVITIES:10}

# JWT密钥轮换配置 - 开发环境
honyrun.jwt.key-rotation-enabled=${HONYRUN_JWT_KEY_ROTATION_ENABLED:false}
honyrun.jwt.key-rotation-interval=${HONYRUN_JWT_KEY_ROTATION_INTERVAL:2592000000}
honyrun.jwt.key-version=${HONYRUN_JWT_KEY_VERSION:v1}
honyrun.jwt.old-key-retention-time=${HONYRUN_JWT_OLD_KEY_RETENTION_TIME:2592000000}

# JWT默认IP配置 - 开发环境
honyrun.jwt.default-ip=${HONYRUN_JWT_DEFAULT_IP:127.0.0.1}

# 安全配置
honyrun.security.cors.allowed-origins=${HONYRUN_SECURITY_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
honyrun.security.cors.allowed-methods=${HONYRUN_SECURITY_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
honyrun.security.cors.allowed-headers=${HONYRUN_SECURITY_CORS_ALLOWED_HEADERS:*}
honyrun.security.cors.allow-credentials=${HONYRUN_SECURITY_CORS_ALLOW_CREDENTIALS:true}

# ========================================
# 服务器配置（整合自application-env-template.properties和application-unified-config.properties）
# ========================================
# 服务器端口
server.port=${HONYRUN_SERVER_PORT:8901}
# 服务器超时配置
honyrun.server.connection-timeout=${HONYRUN_SERVER_CONNECTION_TIMEOUT:30000}
honyrun.server.read-timeout=${HONYRUN_SERVER_READ_TIMEOUT:60000}
honyrun.server.write-timeout=${HONYRUN_SERVER_WRITE_TIMEOUT:60000}

# ========================================
# 缓存配置（整合自application-unified-config.properties）
# ========================================
# 缓存TTL配置（秒）
honyrun.cache.ttl.default=${HONYRUN_CACHE_TTL_DEFAULT:3600}
honyrun.cache.ttl.user=${HONYRUN_CACHE_TTL_USER:1800}
honyrun.cache.ttl.system=${HONYRUN_CACHE_TTL_SYSTEM:7200}
honyrun.cache.ttl.session=${HONYRUN_CACHE_TTL_SESSION:1800}
honyrun.cache.ttl.token=${HONYRUN_CACHE_TTL_TOKEN:86400}

# 缓存键前缀
honyrun.cache.prefix.user=${HONYRUN_CACHE_PREFIX_USER:user:}
honyrun.cache.prefix.system=${HONYRUN_CACHE_PREFIX_SYSTEM:system:}
honyrun.cache.prefix.session=${HONYRUN_CACHE_PREFIX_SESSION:session:}
honyrun.cache.prefix.token=${HONYRUN_CACHE_PREFIX_TOKEN:token:}

# ========================================
# 监控配置（整合自application-unified-config.properties）
# ========================================
# 监控间隔（毫秒）
honyrun.monitoring.interval.health=${HONYRUN_MONITORING_INTERVAL_HEALTH:30000}
honyrun.monitoring.interval.metrics=${HONYRUN_MONITORING_INTERVAL_METRICS:60000}
honyrun.monitoring.interval.performance=${HONYRUN_MONITORING_INTERVAL_PERFORMANCE:300000}

# 监控阈值
honyrun.monitoring.threshold.cpu=${HONYRUN_MONITORING_THRESHOLD_CPU:80}
honyrun.monitoring.threshold.memory=${HONYRUN_MONITORING_THRESHOLD_MEMORY:85}
honyrun.monitoring.threshold.disk=${HONYRUN_MONITORING_THRESHOLD_DISK:90}

# ========================================
# 重试配置（整合自application-unified-config.properties）
# ========================================
# 重试次数
honyrun.retry.max-attempts=${HONYRUN_RETRY_MAX_ATTEMPTS:3}
# 重试延迟（毫秒）
honyrun.retry.delay=${HONYRUN_RETRY_DELAY:1000}
# 重试退避倍数
honyrun.retry.backoff-multiplier=${HONYRUN_RETRY_BACKOFF_MULTIPLIER:2}

# ========================================
# URL配置（整合自application-unified-config.properties）
# ========================================
# 基础URL
honyrun.url.base=${HONYRUN_URL_BASE:http://localhost:8901}
# API基础路径
honyrun.url.api-base=${HONYRUN_URL_API_BASE:/api/v1}
# 健康检查URL
honyrun.url.health=${HONYRUN_URL_HEALTH:/actuator/health}
# 指标URL
honyrun.url.metrics=${HONYRUN_URL_METRICS:/actuator/metrics}

# JWT安全配置 - 开发环境（统一使用honyrun.jwt.*前缀）
# 移除jwt.*前缀配置，统一使用honyrun.jwt.*前缀

# 开发环境CORS配置
cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type,X-Requested-With,X-API-Version,Accept,Accept-Language,Accept-Encoding,Cache-Control,X-CSRF-Token,X-Request-ID
cors.allow-credentials=true
cors.max-age=3600

# ========================================
# 开发环境监控配置
# ========================================
# Actuator开发环境配置
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.configprops.show-values=always
management.endpoint.env.show-values=always
# 新增：Info端点展示环境/Java/OS信息
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
# 项目基础信息
info.app.name=HonyRunReactiveSystem
info.app.version=2.0.0
info.app.description=基于Spring WebFlux的响应式业务支撑平台

# 开发环境健康检查
management.health.redis.enabled=false
management.health.r2dbc.enabled=true
management.health.diskspace.enabled=true

# WebClient超时配置 - 解决ReadTimeoutException
spring.webflux.webclient.connect-timeout=30s
spring.webflux.webclient.read-timeout=60s
spring.webflux.webclient.write-timeout=60s

# 健康检查超时配置 - 优化超时时间
honyrun.health-check.timeout.database=8s
honyrun.health-check.timeout.redis=12s
honyrun.health-check.timeout.default=10s

# ========================================
# 开发环境性能配置（32GB内存环境优化）
# ========================================
# 开发环境背压配置 - 32GB环境增加缓冲区大小
reactor.bufferSize.small=256
reactor.bufferSize.default=1024
reactor.bufferSize.large=4096

# 开发环境调度器配置 - 32GB环境优化线程配置
reactor.schedulers.parallel.size=8
reactor.schedulers.elastic.ttl=60000
reactor.schedulers.elastic.size=20

# Netty服务器配置 - 开发环境
honyrun.netty.server.port=${HONYRUN_SERVER_PORT:8901}
honyrun.netty.server.wiretap=${HONYRUN_NETTY_WIRETAP:true}
honyrun.netty.server.access-log=${HONYRUN_NETTY_ACCESS_LOG:true}
honyrun.netty.server.compression=${HONYRUN_NETTY_COMPRESSION:true}
honyrun.netty.server.forwarded=${HONYRUN_NETTY_FORWARDED:true}

# Netty HTTP配置 - 开发环境
honyrun.netty.http.max-initial-line-length=8192
honyrun.netty.http.max-header-size=16384
honyrun.netty.http.validate-headers=true
honyrun.netty.http.initial-buffer-size=1024

# Netty线程池配置
honyrun.netty.thread-pool.daemon=true
honyrun.netty.thread-pool.http-thread-name-prefix=honyrun-http-
honyrun.netty.thread-pool.thread-name-prefix=honyrun-netty-

# Netty线程池配置 - 32GB环境增加线程数
honyrun.netty.thread-pool.event-loop-threads=16
honyrun.netty.thread-pool.http-event-loop-threads=8

# Netty连接配置 - 32GB环境支持更多连接
honyrun.netty.connection.connect-timeout-millis=30000
honyrun.netty.connection.max-connections=5000
honyrun.netty.connection.backlog=4096
honyrun.netty.connection.pending-acquire-timeout=10000
honyrun.netty.connection.max-idle-time=2700000
honyrun.netty.connection.max-life-time=7200000
honyrun.netty.connection.keep-alive=true
honyrun.netty.connection.tcp-no-delay=true
honyrun.netty.connection.reuse-address=true
honyrun.netty.connection.idle-timeout=PT30M
honyrun.netty.connection.request-timeout=PT30S
honyrun.netty.connection.pending-acquire-max-count=1000
honyrun.netty.connection.metrics=true
honyrun.netty.connection.evict-in-background=PT30S

# Netty缓冲区配置 - 32GB环境优化缓冲区大小
honyrun.netty.buffer.receive-buffer-size=65536
honyrun.netty.buffer.send-buffer-size=65536
honyrun.netty.buffer.write-buffer-low-water-mark=32768
honyrun.netty.buffer.write-buffer-high-water-mark=65536

# ========================================
# 开发环境压缩配置
# ========================================
# 开发环境压缩设置（较宽松的配置便于调试）
server.compression.enabled=true
server.compression.min-response-size=512
# 开发环境响应大小限制（较大的限制便于调试）
honyrun.response.max-size=104857600
honyrun.response.size-check-enabled=true

# ========================================
# 开发环境限流配置（32GB内存环境优化）
# ========================================
# 开发环境限流设置 - 32GB环境支持更高并发
honyrun.rate-limit.enabled=true
honyrun.rate-limit.global.requests-per-second=2000
honyrun.rate-limit.global.burst-capacity=4000
honyrun.rate-limit.ip.requests-per-second=200
honyrun.rate-limit.ip.burst-capacity=400
honyrun.rate-limit.user.requests-per-second=400
honyrun.rate-limit.user.burst-capacity=800
honyrun.rate-limit.endpoint.requests-per-second=1000
honyrun.rate-limit.endpoint.burst-capacity=2000

# ========================================
# 开发工具配置
# ========================================
# 热重载配置
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=static/**,public/**,templates/**

# LiveReload配置
spring.devtools.livereload.enabled=true
spring.devtools.livereload.port=35729

# ========================================
# 开发环境测试用户配置（仅用于开发测试）
# ========================================
# 测试系统用户配置
test.sys.username=${TEST_SYS_USERNAME:honyrun-sys}
test.sys.password=${TEST_SYS_PASSWORD:honyrun@sys}
test.user1.username=${TEST_USER1_USERNAME:user1}
test.user1.password=${TEST_USER1_PASSWORD:honyrun@sys}
test.user2.username=${TEST_USER2_USERNAME:user2}
test.user2.password=${TEST_USER2_PASSWORD:honyrun@sys}

# ========================================
# 开发环境监控配置
# ========================================
# 统一监控调度器配置
honyrun.monitoring.task.enabled=true
honyrun.monitoring.enabled=true
honyrun.monitoring.reactive.debug.enabled=false

# 调度器配置
honyrun.scheduler.cache-refresh.enabled=true
honyrun.scheduler.user-expiry-check.enabled=true
honyrun.scheduler.maintenance.enabled=true

# 动态调度配置
honyrun.schedule.config-prefix=schedule:config:
honyrun.schedule.default-interval=PT5M
honyrun.schedule.default-timeout=PT2M
honyrun.schedule.default-retry-count=3
honyrun.schedule.default-retry-delay=PT30S

# 健康检查配置
honyrun.health-check.enabled=true
honyrun.health.cache-duration=30

# 图片处理配置
honyrun.image.default-quality=0.8
honyrun.image.max-file-size=10485760

# 错误恢复配置
honyrun.error-recovery.enabled=true
honyrun.error-recovery.max-retry-attempts=3
honyrun.error-recovery.initial-retry-delay=PT1S
honyrun.error-recovery.max-retry-delay=PT10S
honyrun.error-recovery.jitter-factor=0.1

# ========================================
# 开发环境调试配置
# ========================================
# SQL调试
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.postgresql.QUERY=DEBUG
logging.level.io.r2dbc.postgresql.PARAM=DEBUG

# 调试日志配置
logging.level.com.honyrun.config.database=DEBUG
logging.level.io.r2dbc.pool=DEBUG
logging.level.io.r2dbc.spi=DEBUG

# HTTP调试
logging.level.org.springframework.web.reactive.function.client=DEBUG
logging.level.reactor.netty.http.client=DEBUG
logging.level.reactor.netty.http.server=DEBUG

# 缓存调试
logging.level.org.springframework.cache=DEBUG
logging.level.org.springframework.data.redis=DEBUG

# ========================================
# 开发环境请求签名验证配置
# ========================================
# 开发环境默认启用请求签名验证用于测试
# 签名验证配置
honyrun.signature.algorithm=HmacSHA256
honyrun.signature.nonce-prefix=nonce:
honyrun.signature.validity-period=600

# 权限缓存配置
honyrun.permission.cache-duration=PT30M

security.request.signature.enabled=true
security.request.signature.validity_period=600
# 开发环境使用固定的客户端密钥便于测试
security.default.client.secret=honyrun-dev-default-client-secret
security.client.honyrun-web.secret=honyrun-dev-web-client-secret
security.client.honyrun-mobile.secret=honyrun-dev-mobile-client-secret

# ========================================
# 安全常量配置 - 开发环境
# ========================================
# JWT密钥配置
# JWT配置统一使用honyrun.jwt.*前缀，移除honyrun.security.jwt.*前缀配置

# 密码策略配置
honyrun.security.password.min-length=6
honyrun.security.password.max-length=20
honyrun.security.password.require-digit=true
honyrun.security.password.require-letter=true
honyrun.security.password.require-special=false
honyrun.security.password.history-count=5
honyrun.security.password.expire-days=90

# 登录安全配置
honyrun.security.login.max-attempts=5
honyrun.security.login.account-lock-minutes=30
honyrun.security.login.attempt-reset-minutes=60
honyrun.security.login.session-timeout-minutes=120
honyrun.security.login.remember-me-expire-days=30

# 加密算法配置
honyrun.security.encryption.bcrypt-strength=12
honyrun.security.encryption.rsa-key-size=2048

# 安全头配置
honyrun.security.headers.csp-policy=default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'
honyrun.security.headers.x-frame-options=DENY
honyrun.security.headers.x-content-type-options=nosniff
honyrun.security.headers.x-xss-protection=1; mode=block
honyrun.security.headers.hsts=max-age=31536000; includeSubDomains
honyrun.security.headers.referrer-policy=strict-origin-when-cross-origin

# 限流配置
honyrun.security.rate-limit.default-per-minute=60
honyrun.security.rate-limit.login-per-minute=10
honyrun.security.rate-limit.api-per-minute=100
honyrun.security.rate-limit.upload-per-minute=20

# CORS配置
honyrun.security.cors.allowed-origins=http://localhost:3000,http://localhost:8080
honyrun.security.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
honyrun.security.cors.allowed-headers=Content-Type,Authorization,X-Requested-With
honyrun.security.cors.exposed-headers=X-Total-Count,X-Total-Pages
honyrun.security.cors.preflight-max-age=3600

# CSRF保护配置
honyrun.security.csrf.enabled=true
honyrun.security.csrf.origin-validation=true
honyrun.security.csrf.double-cookie=false
honyrun.security.csrf.same-origin-check=true
honyrun.security.csrf.token-expiration-minutes=30
honyrun.security.csrf.allowed-origins=http://localhost:3000,https://localhost:3000
honyrun.security.csrf.token-header-name=X-CSRF-Token
honyrun.security.csrf.cookie-name=CSRF-TOKEN
honyrun.security.csrf.secure-cookie=true
honyrun.security.csrf.http-only-cookie=false

# ========================================
# 业务超时配置 - 开发环境
# ========================================
# 文件上传配置
honyrun.upload.max-file-size=10MB
honyrun.upload.max-request-size=50MB
honyrun.upload.timeout=300000

# 缓存超时配置
honyrun.cache.default-timeout=30000
honyrun.cache.user-timeout=1800000
honyrun.cache.session-timeout=3600000

# 任务调度超时配置 - 优化超时时间
honyrun.scheduler.task-timeout=300000
honyrun.scheduler.health-check-timeout=30000
honyrun.scheduler.cleanup-timeout=60000

# 性能测试配置
honyrun.performance.test.duration=1000
honyrun.performance.test.concurrent-users=100
honyrun.performance.test.ramp-up-time=30000

# 日志配置
honyrun.logging.max-file-size=10MB
honyrun.logging.max-history=30
honyrun.logging.total-size-cap=1GB

# 验证码配置
honyrun.captcha.timeout=300000
honyrun.captcha.length=4
honyrun.captcha.width=120
honyrun.captcha.height=40

# 邮件发送超时配置
honyrun.mail.connection-timeout=30000
honyrun.mail.read-timeout=60000
honyrun.mail.write-timeout=60000

# ========================================
# 测试用户配置 - 开发环境
# ========================================
# 系统用户密码（BCrypt加密）
honyrun.test.users.system.password-hash=$2a$12$K8x2M9z7Q3w6R1t5Y8p2L4v6B9n4H7j1G3f5D8c0X2a9Z7s8W5q7E6
honyrun.test.users.normal.password-hash=$2b$12$abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQR

# 测试客户端密钥
honyrun.test.client.default-secret=default-secret-key
honyrun.test.client.web-secret=honyrun-jwt-secret-key-for-testing-environment-2025
honyrun.test.client.mobile-secret=secret-key
